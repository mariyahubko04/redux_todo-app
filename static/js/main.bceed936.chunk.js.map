{"version":3,"sources":["api.js","TodoList.js","store.js","App.js","index.js"],"names":["API_URL","getTodos","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","concat","sent","abrupt","json","stop","apply","this","arguments","connect","state","todos","dispatch","setTodos","type","payload","toggleTodo","todoId","newTodos","map","todo","id","_objectSpread","completed","react_default","createElement","className","key","checked","onChange","title","ADD_TODO","store","createStore","action","store_objectSpread","toConsumableArray","value","addTodo","Date","now","_useState","useState","_useState2","slicedToArray","changeAddTodo","useEffect","then","handleAddTodo","event","preventDefault","activeTodos","filter","length","onSubmit","placeholder","target","onClick","src_TodoList","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bceed936.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async() => {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n};\n\nexport const getUser = async(userId) => {\n  const response = await fetch(`${API_URL}/users/${userId}`);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst TodoList = ({ todos, setTodos }) => {\n  const toggleTodo = (todoId) => {\n    const newTodos = todos.map(todo => {\n      return (todoId !== todo.id)\n        ? todo\n        : { ...todo, completed: !todo.completed };\n    });\n\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <strong>Todos:</strong>\n\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li key={todo.id} className=\"TodoList__item\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => toggleTodo(todo.id)}\n              />\n\n              {todo.title}\n            </label>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapState = (state) => ({\n  todos: state.todos,\n});\n\nconst mapDispatch = (dispatch) => ({\n  setTodos: (todos) => dispatch({\n    type: 'SET_TODOS',\n    payload: todos,\n  }),\n});\n\nexport default connect(mapState, mapDispatch)(TodoList);\n\n\n\n\n\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\n","import { createStore } from 'redux';\n\nconst ADD_TODO = 'ADD_TODO';\n\nconst initialState = {\n  todos: [],\n};\n\n//actions\nexport function addTodo(value) {\n  \n  return {\n    type: ADD_TODO,\n    value: {\n      id: Date.now(),\n      title: value,\n      completed: false,\n    },\n  }\n}\n//\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, action.value],\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getTodos } from './api';\nimport TodoList from './TodoList';\nimport { addTodo } from './store';\n\nconst App = ({ todos, setTodos, addTodo }) => {\n\n  const [value, changeAddTodo] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        setTodos(todos);\n      });\n  }, []);\n\n  const handleAddTodo = (event) => {\n    event.preventDefault();\n\n    addTodo(value);\n    changeAddTodo('');\n  }\n\n  const activeTodos = todos.filter(todo => !todo.completed);\n\n  return (\n    <main className=\"App\">\n      <h1>\n        Todo APP with Redux\n        ({activeTodos.length})\n      </h1>\n      <div>\n        <form onSubmit={handleAddTodo}>\n          <input\n            type='text'\n            placeholder='Enter new todo'\n            value={value}\n            onChange={(event) => changeAddTodo(event.target.value)}\n          />\n          <button onClick={() => handleAddTodo}>Add</button>\n        </form>\n      </div>\n\n      <TodoList />\n    </main>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTodos: (todos) => dispatch({\n    type: 'SET_TODOS',\n    payload: todos,\n  }),\n  addTodo: (value) => dispatch(addTodo(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}